{"ast":null,"code":"var _jsxFileName = \"/home/alexferro/Documents/GitHub/estudos/rocketseat/nlw-together-reactjs/letmeask/src/components/Button.tsx\";\nimport '../styles/button.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Button(_ref) {\n  let {\n    isOutlined = false,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `button ${isOutlined ? 'outlined' : ''}`,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["Button","isOutlined","props"],"sources":["/home/alexferro/Documents/GitHub/estudos/rocketseat/nlw-together-reactjs/letmeask/src/components/Button.tsx"],"sourcesContent":["import { ButtonHTMLAttributes} from 'react'\n\nimport '../styles/button.scss';\n\ntype ButtonProps = ButtonHTMLAttributes<HTMLButtonElement> & {\n  isOutlined?: boolean;\n}\n\nexport function Button({ isOutlined = false, ...props } : ButtonProps){\n  return (  \n    <button className={`button ${isOutlined ? 'outlined' : ''}`}\n     {...props}/>\n    )\n}"],"mappings":";AAEA,OAAO,uBAAP;;AAMA,OAAO,SAASA,MAAT,OAA+D;EAAA,IAA/C;IAAEC,UAAU,GAAG,KAAf;IAAsB,GAAGC;EAAzB,CAA+C;EACpE,oBACE;IAAQ,SAAS,EAAG,UAASD,UAAU,GAAG,UAAH,GAAgB,EAAG,EAA1D;IAAA,GACKC;EADL;IAAA;IAAA;IAAA;EAAA,QADF;AAID;KALeF,M"},"metadata":{},"sourceType":"module"}