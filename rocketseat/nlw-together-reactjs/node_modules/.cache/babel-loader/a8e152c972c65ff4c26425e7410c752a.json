{"ast":null,"code":"import _slicedToArray from\"/home/alexferro/Documents/GitHub/estudos/rocketseat/nlw-together-reactjs/letmeask/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from\"react\";import{database}from\"../services/firebase\";import{useAuth}from\"./useAuth\";export function useRoom(roomId){var _useAuth=useAuth(),user=_useAuth.user;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),questions=_useState2[0],setQuestions=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),title=_useState4[0],setTitle=_useState4[1];useEffect(function(){var roomRef=database.ref(\"rooms/\".concat(roomId));roomRef.on('value',function(room){var _databaseRoom$questio;var databaseRoom=room.val();var firebaseQuestions=(_databaseRoom$questio=databaseRoom.questions)!==null&&_databaseRoom$questio!==void 0?_databaseRoom$questio:{};var parsedQuestion=Object.entries(firebaseQuestions).map(function(_ref){var _value$likes,_Object$entries$find,_value$likes2;var _ref2=_slicedToArray(_ref,2),key=_ref2[0],value=_ref2[1];return{id:key,content:value.content,author:value.author,isAnswered:value.isAnswered,isHighlighted:value.isHighlighted,likeCount:Object.values((_value$likes=value.likes)!==null&&_value$likes!==void 0?_value$likes:{}).length,likeId:(_Object$entries$find=Object.entries((_value$likes2=value.likes)!==null&&_value$likes2!==void 0?_value$likes2:{}).find(function(_ref3){var _ref4=_slicedToArray(_ref3,2),key=_ref4[0],like=_ref4[1];return like.authorId===(user===null||user===void 0?void 0:user.id);}))===null||_Object$entries$find===void 0?void 0:_Object$entries$find[0]};});setTitle(databaseRoom.title);setQuestions(parsedQuestion);});return function(){roomRef.off('value');};},[roomId,user===null||user===void 0?void 0:user.id]);return{questions:questions,title:title};}","map":{"version":3,"names":["useEffect","useState","database","useAuth","useRoom","roomId","user","questions","setQuestions","title","setTitle","roomRef","ref","on","room","databaseRoom","val","firebaseQuestions","parsedQuestion","Object","entries","map","key","value","id","content","author","isAnswered","isHighlighted","likeCount","values","likes","length","likeId","find","like","authorId","off"],"sources":["/home/alexferro/Documents/GitHub/estudos/rocketseat/nlw-together-reactjs/letmeask/src/hooks/useRoom.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { database } from \"../services/firebase\";\nimport { useAuth } from \"./useAuth\";\n\ntype QuestionType = {\n  id: string;\n  author: {\n    name: string;\n    avatar: string;\n  }\n  content: string;\n  isHighlighted: boolean;\n  isAnswered: boolean;\n  likeCount: number;\n  likeId: string | undefined;\n}\n\ntype FirebaseQuestions = Record<string, {\n  author: {\n    name: string;\n    avatar: string;\n  }\n  content: string;\n  isHighlighted: boolean;\n  isAnswered: boolean;\n  likes: Record<string, {\n    authorId: string;\n  }>\n}>\n\nexport function useRoom(roomId : string){\n    const { user } = useAuth();\n    const [questions, setQuestions] = useState<QuestionType[]>([])\n    const [title, setTitle] = useState('');\n\n\n    useEffect(() => {\n      const roomRef = database.ref(`rooms/${roomId}`);\n      \n      roomRef.on('value', room => {\n        const databaseRoom = room.val();\n        const firebaseQuestions: FirebaseQuestions = databaseRoom.questions  ?? {};\n\n        const parsedQuestion = Object.entries(firebaseQuestions).map(([key, value]) => {\n          return {\n            id: key,\n            content: value.content,\n            author: value.author,\n            isAnswered: value.isAnswered,\n            isHighlighted: value.isHighlighted,\n            likeCount: Object.values(value.likes ?? {}).length,\n            likeId: Object.entries(value.likes ?? {}).find(([key, like]) => like.authorId === user?.id)?.[0],\n          }\n        })\n        setTitle(databaseRoom.title)\n        setQuestions(parsedQuestion)\n      })\n\n      return () => {\n        roomRef.off('value');\n      }\n\n    }, [roomId, user?.id])\n\n    return {questions, title}\n}"],"mappings":"uKAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,OAASC,QAAT,KAAyB,sBAAzB,CACA,OAASC,OAAT,KAAwB,WAAxB,CA4BA,MAAO,SAASC,QAAT,CAAiBC,MAAjB,CAAiC,CACpC,aAAiBF,OAAO,EAAxB,CAAQG,IAAR,UAAQA,IAAR,CACA,cAAkCL,QAAQ,CAAiB,EAAjB,CAA1C,wCAAOM,SAAP,eAAkBC,YAAlB,eACA,eAA0BP,QAAQ,CAAC,EAAD,CAAlC,yCAAOQ,KAAP,eAAcC,QAAd,eAGAV,SAAS,CAAC,UAAM,CACd,GAAMW,QAAO,CAAGT,QAAQ,CAACU,GAAT,iBAAsBP,MAAtB,EAAhB,CAEAM,OAAO,CAACE,EAAR,CAAW,OAAX,CAAoB,SAAAC,IAAI,CAAI,2BAC1B,GAAMC,aAAY,CAAGD,IAAI,CAACE,GAAL,EAArB,CACA,GAAMC,kBAAoC,wBAAGF,YAAY,CAACR,SAAhB,+DAA8B,EAAxE,CAEA,GAAMW,eAAc,CAAGC,MAAM,CAACC,OAAP,CAAeH,iBAAf,EAAkCI,GAAlC,CAAsC,cAAkB,sFAAhBC,GAAgB,UAAXC,KAAW,UAC7E,MAAO,CACLC,EAAE,CAAEF,GADC,CAELG,OAAO,CAAEF,KAAK,CAACE,OAFV,CAGLC,MAAM,CAAEH,KAAK,CAACG,MAHT,CAILC,UAAU,CAAEJ,KAAK,CAACI,UAJb,CAKLC,aAAa,CAAEL,KAAK,CAACK,aALhB,CAMLC,SAAS,CAAEV,MAAM,CAACW,MAAP,eAAcP,KAAK,CAACQ,KAApB,6CAA6B,EAA7B,EAAiCC,MANvC,CAOLC,MAAM,uBAAEd,MAAM,CAACC,OAAP,gBAAeG,KAAK,CAACQ,KAArB,+CAA8B,EAA9B,EAAkCG,IAAlC,CAAuC,kDAAEZ,GAAF,UAAOa,IAAP,gBAAiBA,KAAI,CAACC,QAAL,IAAkB9B,IAAlB,SAAkBA,IAAlB,iBAAkBA,IAAI,CAAEkB,EAAxB,CAAjB,EAAvC,CAAF,+CAAE,qBAAsF,CAAtF,CAPH,CAAP,CASD,CAVsB,CAAvB,CAWAd,QAAQ,CAACK,YAAY,CAACN,KAAd,CAAR,CACAD,YAAY,CAACU,cAAD,CAAZ,CACD,CAjBD,EAmBA,MAAO,WAAM,CACXP,OAAO,CAAC0B,GAAR,CAAY,OAAZ,EACD,CAFD,CAID,CA1BQ,CA0BN,CAAChC,MAAD,CAASC,IAAT,SAASA,IAAT,iBAASA,IAAI,CAAEkB,EAAf,CA1BM,CAAT,CA4BA,MAAO,CAACjB,SAAS,CAATA,SAAD,CAAYE,KAAK,CAALA,KAAZ,CAAP,CACH"},"metadata":{},"sourceType":"module"}