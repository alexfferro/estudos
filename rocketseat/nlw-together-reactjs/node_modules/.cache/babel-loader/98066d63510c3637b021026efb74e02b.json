{"ast":null,"code":"import _regeneratorRuntime from\"/home/alexferro/Documents/GitHub/estudos/rocketseat/nlw-together-reactjs/letmeask/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/alexferro/Documents/GitHub/estudos/rocketseat/nlw-together-reactjs/letmeask/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/alexferro/Documents/GitHub/estudos/rocketseat/nlw-together-reactjs/letmeask/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{createContext,useEffect,useState}from\"react\";import{auth,firebase}from\"../services/firebase\";import{jsx as _jsx}from\"react/jsx-runtime\";export var AuthContext=/*#__PURE__*/createContext({});export function AuthContextProvider(props){var _useState=useState(),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];useEffect(function(){var unsubscribe=auth.onAuthStateChanged(function(user){if(user){var displayName=user.displayName,photoURL=user.photoURL,uid=user.uid;if(!displayName||!photoURL){throw new Error('Missing Information from Google Account');}setUser({id:uid,name:displayName,avatar:photoURL});}});return function(){unsubscribe();};},[]);function signInWithGoogle(){return _signInWithGoogle.apply(this,arguments);}function _signInWithGoogle(){_signInWithGoogle=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var provider,result,_result$user,displayName,photoURL,uid;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:provider=new firebase.auth.GoogleAuthProvider();_context.next=3;return auth.signInWithPopup(provider);case 3:result=_context.sent;if(!result.user){_context.next=9;break;}_result$user=result.user,displayName=_result$user.displayName,photoURL=_result$user.photoURL,uid=_result$user.uid;if(!(!displayName||!photoURL)){_context.next=8;break;}throw new Error('Missing Information from Google Account');case 8:setUser({id:uid,name:displayName,avatar:photoURL});case 9:case\"end\":return _context.stop();}}},_callee);}));return _signInWithGoogle.apply(this,arguments);}return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user:user,signInWithGoogle:signInWithGoogle},children:props.children});}","map":{"version":3,"names":["createContext","useEffect","useState","auth","firebase","AuthContext","AuthContextProvider","props","user","setUser","unsubscribe","onAuthStateChanged","displayName","photoURL","uid","Error","id","name","avatar","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","result","children"],"sources":["/home/alexferro/Documents/GitHub/estudos/rocketseat/nlw-together-reactjs/letmeask/src/contexts/AuthContext.tsx"],"sourcesContent":["import { createContext, ReactNode, useEffect, useState } from \"react\";\nimport { auth, firebase } from \"../services/firebase\";\n\ntype User = {\n  id: string;\n  name: string;\n  avatar: string;\n}\n\ntype AuthContextType = {\n  user: User | undefined;\n  signInWithGoogle: () => Promise<void>;\n}\n\ntype AuthContextProviderProps = {\n  children: ReactNode;\n}\n\nexport const AuthContext = createContext({  } as AuthContextType)\n\nexport function AuthContextProvider(props: AuthContextProviderProps){\n\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if (user) {\n        const {displayName, photoURL, uid} = user;\n\n        if (!displayName || !photoURL){\n          throw new Error('Missing Information from Google Account')\n        }\n        setUser({\n          id: uid,\n          name: displayName,\n          avatar: photoURL\n        })\n      }\n    })\n\n    return () =>{\n      unsubscribe()\n    }\n  },[])\n\n  async function signInWithGoogle(){\n    const provider = new firebase.auth.GoogleAuthProvider();\n\n    const result = await auth.signInWithPopup(provider);\n    if (result.user) {\n      const {displayName, photoURL, uid} = result.user;\n\n      if (!displayName || !photoURL){\n        throw new Error('Missing Information from Google Account')\n      }\n\n      setUser({\n        id: uid,\n        name: displayName,\n        avatar: photoURL\n      })\n    }\n  }\n\n  return (\n    <AuthContext.Provider value={ {user, signInWithGoogle} }>\n      {props.children}\n    </AuthContext.Provider>\n  );\n}"],"mappings":"qgBAAA,OAASA,aAAT,CAAmCC,SAAnC,CAA8CC,QAA9C,KAA8D,OAA9D,CACA,OAASC,IAAT,CAAeC,QAAf,KAA+B,sBAA/B,C,2CAiBA,MAAO,IAAMC,YAAW,cAAGL,aAAa,CAAC,EAAD,CAAjC,CAEP,MAAO,SAASM,oBAAT,CAA6BC,KAA7B,CAA6D,CAElE,cAAwBL,QAAQ,EAAhC,wCAAOM,IAAP,eAAaC,OAAb,eAEAR,SAAS,CAAC,UAAM,CACd,GAAMS,YAAW,CAAGP,IAAI,CAACQ,kBAAL,CAAwB,SAAAH,IAAI,CAAI,CAClD,GAAIA,IAAJ,CAAU,CACR,GAAOI,YAAP,CAAqCJ,IAArC,CAAOI,WAAP,CAAoBC,QAApB,CAAqCL,IAArC,CAAoBK,QAApB,CAA8BC,GAA9B,CAAqCN,IAArC,CAA8BM,GAA9B,CAEA,GAAI,CAACF,WAAD,EAAgB,CAACC,QAArB,CAA8B,CAC5B,KAAM,IAAIE,MAAJ,CAAU,yCAAV,CAAN,CACD,CACDN,OAAO,CAAC,CACNO,EAAE,CAAEF,GADE,CAENG,IAAI,CAAEL,WAFA,CAGNM,MAAM,CAAEL,QAHF,CAAD,CAAP,CAKD,CACF,CAbmB,CAApB,CAeA,MAAO,WAAK,CACVH,WAAW,GACZ,CAFD,CAGD,CAnBQ,CAmBP,EAnBO,CAAT,CAJkE,QAyBnDS,iBAzBmD,4JAyBlE,+LACQC,QADR,CACmB,GAAIhB,SAAQ,CAACD,IAAT,CAAckB,kBAAlB,EADnB,uBAGuBlB,KAAI,CAACmB,eAAL,CAAqBF,QAArB,CAHvB,QAGQG,MAHR,mBAIMA,MAAM,CAACf,IAJb,sCAKyCe,MAAM,CAACf,IALhD,CAKWI,WALX,cAKWA,WALX,CAKwBC,QALxB,cAKwBA,QALxB,CAKkCC,GALlC,cAKkCA,GALlC,MAOQ,CAACF,WAAD,EAAgB,CAACC,QAPzB,+BAQY,IAAIE,MAAJ,CAAU,yCAAV,CARZ,QAWIN,OAAO,CAAC,CACNO,EAAE,CAAEF,GADE,CAENG,IAAI,CAAEL,WAFA,CAGNM,MAAM,CAAEL,QAHF,CAAD,CAAP,CAXJ,sDAzBkE,mDA4ClE,mBACE,KAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAG,CAACL,IAAI,CAAJA,IAAD,CAAOW,gBAAgB,CAAhBA,gBAAP,CAA9B,UACGZ,KAAK,CAACiB,QADT,EADF,CAKD"},"metadata":{},"sourceType":"module"}