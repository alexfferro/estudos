{"ast":null,"code":"var _jsxFileName = \"/home/alexferro/Documents/GitHub/estudos/rocketseat/nlw-together-reactjs/letmeask/src/pages/AdminRoom.tsx\",\n    _s = $RefreshSig$();\n\nimport { RoomCode } from '../components/RoomCode';\nimport { Button } from '../components/Button';\nimport { Question } from '../components/Question';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useRoom } from '../hooks/useRoom'; // import { useAuth } from '../hooks/useAuth'\n\nimport logoImg from '../assets/images/logo.svg';\nimport deleteImg from '../assets/images/delete.svg';\nimport checkImg from '../assets/images/check.svg';\nimport answerImg from '../assets/images/answer.svg';\nimport '../styles/room.scss';\nimport { database } from '../services/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AdminRoom() {\n  _s();\n\n  // const {user} = useAuth();\n  const history = useHistory();\n  const params = useParams();\n  const roomId = params.id;\n  const {\n    questions,\n    title\n  } = useRoom(roomId);\n\n  async function handleEndRoom() {\n    await database.ref(`rooms/${roomId}`).update({\n      endedAt: new Date()\n    });\n    history.push('/');\n  }\n\n  async function handleDeleteQuestion(questionId) {\n    if (window.confirm('Tem certeza que deseja excluir esta pergunta ?')) {\n      await database.ref(`rooms/${roomId}/questions/${questionId}`).remove();\n    }\n  }\n\n  async function handleCheckQuestionAsAnswered(questionId) {\n    await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\n      isAnswered: true\n    });\n  }\n\n  async function handleHighlightQuestion(questionId) {\n    await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\n      isHighlighted: true\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page-room\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoImg,\n          alt: \"Letmeask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(RoomCode, {\n            code: roomId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            isOutlined: true,\n            onClick: handleEndRoom,\n            children: \"Encerrar Sala\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Sala \", title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), questions.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [questions.length, \" pergunta(s)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-list\",\n        children: questions.map(question => {\n          return /*#__PURE__*/_jsxDEV(Question, {\n            content: question.content,\n            author: question.author,\n            isAnswered: question.isAnswered,\n            isHighlighted: question.isHighlighted,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => handleCheckQuestionAsAnswered(question.id),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: checkImg,\n                alt: \"Marcar pergunta como respondida\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => handleHighlightQuestion(question.id),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: answerImg,\n                alt: \"dar destaque a pergunta\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => handleDeleteQuestion(question.id),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: deleteImg,\n                alt: \"Bot\\xE3o para remover mensagem\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this)]\n          }, question.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AdminRoom, \"6he5Ol41Rbuu6/tkeYQMVDrsXLE=\", false, function () {\n  return [useHistory, useParams, useRoom];\n});\n\n_c = AdminRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminRoom\");","map":{"version":3,"names":["RoomCode","Button","Question","useHistory","useParams","useRoom","logoImg","deleteImg","checkImg","answerImg","database","AdminRoom","history","params","roomId","id","questions","title","handleEndRoom","ref","update","endedAt","Date","push","handleDeleteQuestion","questionId","window","confirm","remove","handleCheckQuestionAsAnswered","isAnswered","handleHighlightQuestion","isHighlighted","length","map","question","content","author"],"sources":["/home/alexferro/Documents/GitHub/estudos/rocketseat/nlw-together-reactjs/letmeask/src/pages/AdminRoom.tsx"],"sourcesContent":["import { RoomCode } from '../components/RoomCode'\nimport { Button } from '../components/Button'\nimport { Question } from '../components/Question'\n\nimport { useHistory, useParams } from 'react-router-dom'\nimport { useRoom } from '../hooks/useRoom'\n// import { useAuth } from '../hooks/useAuth'\n\nimport logoImg from '../assets/images/logo.svg'\nimport deleteImg from '../assets/images/delete.svg'\nimport checkImg from '../assets/images/check.svg'\nimport answerImg from '../assets/images/answer.svg'\n\nimport '../styles/room.scss'\nimport { database } from '../services/firebase'\n\ntype RoomParams = {\n  id: string;\n}\n\nexport function AdminRoom(){\n  // const {user} = useAuth();\n  const history = useHistory();\n  const params = useParams<RoomParams>();\n  const roomId = params.id\n\n  const { questions, title } = useRoom(roomId);\n\n  async function handleEndRoom(){\n    await database.ref(`rooms/${roomId}`).update({\n      endedAt: new Date(),\n    })\n\n    history.push('/');\n  }\n\n  async function handleDeleteQuestion(questionId: string){\n    if (window.confirm('Tem certeza que deseja excluir esta pergunta ?')){\n      await database.ref(`rooms/${roomId}/questions/${questionId}`).remove();\n    }\n  }\n\n  async function handleCheckQuestionAsAnswered(questionId: string){\n    await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\n      isAnswered: true,\n    });\n  }\n\n  async function handleHighlightQuestion(questionId: string){\n    await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\n      isHighlighted: true,\n    });\n  }\n\n  return (\n    <div id=\"page-room\">\n      <header>\n        <div className=\"content\">\n          <img src={logoImg} alt=\"Letmeask\" />\n          <div>\n            <RoomCode code={roomId}/>\n            <Button isOutlined onClick={handleEndRoom}>Encerrar Sala</Button>\n          </div>\n        </div>\n      </header>\n\n      <main>\n        <div className=\"room-title\">\n          <h1>Sala {title}</h1>\n          {questions.length > 0 && <span>{questions.length} pergunta(s)</span>}\n        </div>\n\n        <div className=\"question-list\">\n          {questions.map(question => {\n            return (\n              <Question\n              key={question.id}\n              content={question.content}\n              author={question.author}\n              isAnswered={question.isAnswered}\n              isHighlighted={question.isHighlighted}\n              >\n                <button\n                  type='button'\n                  onClick={() => handleCheckQuestionAsAnswered(question.id)}\n                >\n                  <img src={checkImg} alt=\"Marcar pergunta como respondida\" />\n                </button>\n                <button\n                  type='button'\n                  onClick={() => handleHighlightQuestion(question.id)}\n                >\n                  <img src={answerImg} alt=\"dar destaque a pergunta\" />\n                </button>\n                <button\n                  type='button'\n                  onClick={() => handleDeleteQuestion(question.id)}\n                >\n                  <img src={deleteImg} alt=\"Botão para remover mensagem\" />\n                </button>\n              </Question>\n            )\n          })}\n        </div>\n      </main>\n    </div>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}