{"ast":null,"code":"var _jsxFileName = \"/home/alexferro/Documents/GitHub/estudos/rocketseat/nlw-together-reactjs/letmeask/src/contexts/AuthContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nimport { auth, firebase } from \"../services/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({});\nexport function AuthContextProvider(props) {\n  _s();\n\n  const [user, setUser] = useState();\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if (user) {\n        const {\n          displayName,\n          photoURL,\n          uid\n        } = user;\n\n        if (!displayName || !photoURL) {\n          throw new Error('Missing Information from Google Account');\n        }\n\n        setUser({\n          id: uid,\n          name: displayName,\n          avatar: photoURL\n        });\n      }\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  async function signInWithGoogle() {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    const result = await auth.signInWithPopup(provider);\n\n    if (result.user) {\n      const {\n        displayName,\n        photoURL,\n        uid\n      } = result.user;\n\n      if (!displayName || !photoURL) {\n        throw new Error('Missing Information from Google Account');\n      }\n\n      setUser({\n        id: uid,\n        name: displayName,\n        avatar: photoURL\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      signInWithGoogle\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AuthContextProvider, \"hT6C72rcbfRUedrDq+TPaFfRI/M=\");\n\n_c = AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","auth","firebase","AuthContext","AuthContextProvider","props","user","setUser","unsubscribe","onAuthStateChanged","displayName","photoURL","uid","Error","id","name","avatar","signInWithGoogle","provider","GoogleAuthProvider","result","signInWithPopup","children"],"sources":["/home/alexferro/Documents/GitHub/estudos/rocketseat/nlw-together-reactjs/letmeask/src/contexts/AuthContext.tsx"],"sourcesContent":["import { createContext, ReactNode, useEffect, useState } from \"react\";\nimport { auth, firebase } from \"../services/firebase\";\n\ntype User = {\n  id: string;\n  name: string;\n  avatar: string;\n}\n\ntype AuthContextType = {\n  user: User | undefined;\n  signInWithGoogle: () => Promise<void>;\n}\n\ntype AuthContextProviderProps = {\n  children: ReactNode;\n}\n\nexport const AuthContext = createContext({  } as AuthContextType)\n\nexport function AuthContextProvider(props: AuthContextProviderProps){\n\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if (user) {\n        const {displayName, photoURL, uid} = user;\n\n        if (!displayName || !photoURL){\n          throw new Error('Missing Information from Google Account')\n        }\n        setUser({\n          id: uid,\n          name: displayName,\n          avatar: photoURL\n        })\n      }\n    })\n\n    return () =>{\n      unsubscribe()\n    }\n  },[])\n\n  async function signInWithGoogle(){\n    const provider = new firebase.auth.GoogleAuthProvider();\n\n    const result = await auth.signInWithPopup(provider);\n    if (result.user) {\n      const {displayName, photoURL, uid} = result.user;\n\n      if (!displayName || !photoURL){\n        throw new Error('Missing Information from Google Account')\n      }\n\n      setUser({\n        id: uid,\n        name: displayName,\n        avatar: photoURL\n      })\n    }\n  }\n\n  return (\n    <AuthContext.Provider value={ {user, signInWithGoogle} }>\n      {props.children}\n    </AuthContext.Provider>\n  );\n}"],"mappings":";;;AAAA,SAASA,aAAT,EAAmCC,SAAnC,EAA8CC,QAA9C,QAA8D,OAA9D;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,sBAA/B;;AAiBA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,EAAD,CAAjC;AAEP,OAAO,SAASM,mBAAT,CAA6BC,KAA7B,EAA6D;EAAA;;EAElE,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,EAAhC;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMS,WAAW,GAAGP,IAAI,CAACQ,kBAAL,CAAwBH,IAAI,IAAI;MAClD,IAAIA,IAAJ,EAAU;QACR,MAAM;UAACI,WAAD;UAAcC,QAAd;UAAwBC;QAAxB,IAA+BN,IAArC;;QAEA,IAAI,CAACI,WAAD,IAAgB,CAACC,QAArB,EAA8B;UAC5B,MAAM,IAAIE,KAAJ,CAAU,yCAAV,CAAN;QACD;;QACDN,OAAO,CAAC;UACNO,EAAE,EAAEF,GADE;UAENG,IAAI,EAAEL,WAFA;UAGNM,MAAM,EAAEL;QAHF,CAAD,CAAP;MAKD;IACF,CAbmB,CAApB;IAeA,OAAO,MAAK;MACVH,WAAW;IACZ,CAFD;EAGD,CAnBQ,EAmBP,EAnBO,CAAT;;EAqBA,eAAeS,gBAAf,GAAiC;IAC/B,MAAMC,QAAQ,GAAG,IAAIhB,QAAQ,CAACD,IAAT,CAAckB,kBAAlB,EAAjB;IAEA,MAAMC,MAAM,GAAG,MAAMnB,IAAI,CAACoB,eAAL,CAAqBH,QAArB,CAArB;;IACA,IAAIE,MAAM,CAACd,IAAX,EAAiB;MACf,MAAM;QAACI,WAAD;QAAcC,QAAd;QAAwBC;MAAxB,IAA+BQ,MAAM,CAACd,IAA5C;;MAEA,IAAI,CAACI,WAAD,IAAgB,CAACC,QAArB,EAA8B;QAC5B,MAAM,IAAIE,KAAJ,CAAU,yCAAV,CAAN;MACD;;MAEDN,OAAO,CAAC;QACNO,EAAE,EAAEF,GADE;QAENG,IAAI,EAAEL,WAFA;QAGNM,MAAM,EAAEL;MAHF,CAAD,CAAP;IAKD;EACF;;EAED,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAG;MAACL,IAAD;MAAOW;IAAP,CAA9B;IAAA,UACGZ,KAAK,CAACiB;EADT;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GAjDelB,mB;;KAAAA,mB"},"metadata":{},"sourceType":"module"}